Estimated Resident Population Tables
=====================================
ABS release version - December 2013

author: Ryo Eng Lian Hu

date: 25th-Nov-2014

Read Me
=====================================
This app generates Australian population statistics based on data obtained from the Australian Bureau of Statistics (ABS).

**How to use this app**

Click on the 'Table' tab above.

The default population statistics are shown for all of Australia - ages 18 to 100+

You can break down the population statistics by Gender, State and Age

Selecting State will give the option to choose which states to show population figures

Selecting Age will give the option to breakdown age in different ways.

'The about this release' tab provides more information on the data and links to the ABS webpage


Table
========================================================

```{r, echo=FALSE}
  showtable <- reactive ({
    if (input$age_type == "age_custom" & !(as.numeric(input$customised_age) %in% 1:20)) {
      return(NULL)
    }
    if (! ("Age") %in% input$table_variables){
      age_matrix <- matrix(data = c(18,100), nrow = 1)
    }
    else if (input$age_type == "age_regular1"){
      age_matrix <- matrix(data = regular1, ncol =2)
    } 
    else if (input$age_type == "age_regular2"){
      age_matrix <- matrix(data = regular2, ncol =2)
    } 
    else if (input$age_type == "age_regular3"){
      age_matrix <- matrix(data = regular3, ncol =2)
    } 
    else if (input$age_type == "age_five"){
      age_matrix <- matrix(data = five_year, ncol =2)
    } 
    else if (input$age_type == "age_ten"){
      age_matrix <- matrix(data = ten_year, ncol =2) 
    } 
    else if (input$age_type == "age_custom"){
      if (is.null(eval(parse(text=paste0("input$group", as.numeric(input$customised_age)))))) {
        return(NULL)
      }
      age_matrix <- matrix(nrow=as.numeric(input$customised_age), ncol=2)
      for (i in 1:as.numeric(input$customised_age)) {
        age_matrix[i, 1] <- eval(parse(text=paste0("input$group", i, "[1]")))
        age_matrix[i, 2] <- eval(parse(text=paste0("input$group", i, "[2]")))
      }
    }
    else {
      age_matrix <- matrix(data = c(input$age_range[1], input$age_range[2]), nrow = 1)
    }
    byvars <- input$table_variables[input$table_variables != "Age"]
    #   browser()
    state_flt <- input$state_variables
    if (!("State" %in% byvars)) {
      state_flt <- "Australia"
    }
    if (is.null(input$state_variables)){
      state_flt <- "Australia"
    }

    merg <- data.table()
    for (i in 1:nrow(age_matrix)){
      # browser()
      #agg <- data.table()
      min_age <- age_matrix[i, 1]
      max_age <- age_matrix[i, 2]

      if (max_age == 100){
        agelabel <- paste0(min_age,"-","100+")
      } 
      else {agelabel <- paste0(min_age,"-",max_age)}
      pop <- RAWERP[Age >= min_age & Age <= max_age & State %in% state_flt, sum(Population, na.rm = TRUE), by=byvars]
      pop <- cbind(agelabel, pop)
      merg <- rbind(merg, pop)
    }
    setnames(merg, "V1", "Population")
    setnames(merg, "agelabel", "Age")
    downloadtable <<- merg
    merg
  })
```

========================================================

3101.0 - Australian Demographic Statistics
========================================================
About this release

Quarterly estimates of total population for states, territories and Australia. Includes the most recent estimates of the population in five-year age groups; numbers (and some rates) of births, deaths, infant deaths, interstate and overseas movements. Quarterly and/or annual time series tables throughout. Also includes projected resident populations, projected population in households, projected number of households and projected average household size for states, territories and Australia. Periodically, articles on specific demographic topics will be released on the ABS web site in conjunction with this publication.

ABS website links to this release

ABS Website link - Information about this release 

ABS Website link - Downloads 

ABS Website link - Past and Future Releases

